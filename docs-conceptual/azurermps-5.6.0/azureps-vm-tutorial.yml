### YamlMime:Tutorial
title: Creación de máquinas virtuales con Azure PowerShell
metadata:
  title: Creación de máquinas virtuales con Azure PowerShell
  description: Empiece a trabajar con Azure PowerShell mediante la creación de máquinas virtuales.
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 02/08/2018
  ms.author: sewhee
  author: sdwheeler
  manager: carmonm
  ms.devlang: azure-powershell
  ms.technology: azure
  ms.openlocfilehash: 41e63eac376d5490a28ba099d0a853b599c6e35f
  ms.sourcegitcommit: 8376e0bc5f862d382d7283ba72990e3707591e7b
  ms.translationtype: HT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/30/2018
items:
- durationInMinutes: 1
  content: >-
    En este tutorial, aprenderá todos los pasos necesarios para configurar una máquina virtual con Azure PowerShell. El tutorial también trata las consultas de salida, la reutilización de recursos de Azure y la limpieza de recursos.


    Este tutorial se puede llevar a cabo con la experiencia interactiva que se ofrece mediante Azure Cloud Shell, y también se puede [instalar Azure PowerShell](install-azurerm-ps.md) localmente.


    Use __ctrl-Mayús-v__ (__cmd-Mayús-v__ en Mac OS) para pegar el texto del tutorial en Azure Cloud Shell.
- durationInMinutes: 1
  title: Registro
  content: >-
    Si usa una instalación local de Azure PowerShell, debe iniciar sesión antes de realizar otros pasos.


    ```powershell

    Connect-AzureRmAccount

    ```


    Complete el proceso de inicio de sesión siguiendo los pasos que se muestran en el terminal.
- durationInMinutes: 1
  title: Crear un grupo de recursos
  content: >-
    En Azure, todos los recursos se asignan en un grupo de administración de recursos. Los grupos de recursos proporcionan agrupaciones lógicas de recursos para hacer más fácil trabajar con ellos como una colección.

    En este tutorial, todos los recursos creados se sitúan en un grupo llamado `TutorialResources`.


    ```powershell

    New-AzureRmResourceGroup -Name TutorialResources -Location eastus

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Location          : eastus

    ProvisioningState : Succeeded

    Tags              :

    ResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources

    ```
- durationInMinutes: 1
  title: Creación de las credenciales de administración para la máquina virtual
  content: >-
    Para poder crear una nueva máquina virtual, debe crear un objeto de credenciales que contenga el nombre de usuario y la contraseña de la cuenta de administrador de la máquina virtual Windows.


    ```powershell

    $cred = Get-Credential -Message "Enter a username and password for the virtual machine."

    ```


    Cuando se le solicite, escriba el nombre de usuario y la contraseña. El objeto de credenciales resultante se pasa como un parámetro en el paso siguiente.


    ```Output

    Windows PowerShell credential request.

    Enter a username and password for the virtual machine.

    User: tutorAdmin

    Password for user tutorAdmin: *********

    ```
- durationInMinutes: 4
  title: de una máquina virtual
  content: >-
    Las máquinas virtuales en Azure tienen un gran número de dependencias. Azure PowerShell crea estos recursos en función de los argumentos de la línea de comandos que especifique. Para mejorar la legibilidad, estamos usando la [expansión de PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting) para pasar parámetros a los cmdlets de Azure PowerShell.


    Cree una nueva máquina virtual que ejecuta Windows.


    ```powershell

    $vmParams = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM1'
      Location = 'eastus'
      ImageName = 'Win2016Datacenter'
      PublicIpAddressName = 'tutorialPublicIp'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM1 = New-AzureRmVM @vmParams

    ```

    Al crear la máquina virtual, verá los valores utilizados en los parámetros y los recursos de Azure que se van a crear.

    PowerShell mostrará una barra de progreso tal y como se muestra a continuación.


    ```Output
     Creating Azure resources
      39% \
      [ooooooooooooooooooooooooooooooooooo                                                                 ]

      Creating TutorialVM1 virtual machine.
    ```


    Cuando la máquina virtual está lista, podemos ver los resultados en Azure Portal o en la variable \$newVM1.


    ```powershell

    $newVM1

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Id                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1

    VmId              : 12345678-9abc-def0-1234-56789abcedf0

    Name              : TutorialVM1

    Type              : Microsoft.Compute/virtualMachines

    Location          : eastus

    Tags              : {}

    HardwareProfile   : {VmSize}

    NetworkProfile    : {NetworkInterfaces}

    OSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState : Succeeded

    StorageProfile    : {ImageReference, OsDisk, DataDisks}

    ```


    Los valores de propiedad que se muestran dentro de llaves son objetos anidados. En el siguiente paso, mostraremos cómo ver los valores específicos de estos objetos anidados.
- durationInMinutes: 5
  title: Obtención de información de la máquina virtual con consultas
  content: >-
    Vamos a obtener información más detallada acerca de la máquina virtual que acabamos de crear. En este ejemplo, se comprueba el nombre de la máquina virtual y la cuenta de administrador que hemos creado.


    ```powershell

    $newVM1.OSProfile | Select-Object ComputerName,AdminUserName

    ```


    ```Output

    ComputerName AdminUsername

    ------------ -------------

    TutorialVM1  tutorialAdmin

    ```


    Podemos usar otros comandos de Azure PowerShell para obtener información específica sobre la configuración de red.


    ```powershell

    $newVM1 | Get-AzureRmNetworkInterface |
      Select-Object -ExpandProperty IpConfigurations |
        Select-Object Name,PrivateIpAddress
    ```


    En este ejemplo, usamos la canalización de PowerShell para enviar el objeto \$newVM1 al cmdlet `Get-AzureRmNetworkInterface`. En el objeto de interfaz de red resultante, seleccionamos el objeto anidado IpConfigurations. En el objeto IpConfigurations, se han seleccionado las propiedades Name y PrivateIpAddress.


    ```Output

    Name        PrivateIpAddress

    ----        ----------------

    TutorialVM1 192.168.1.4

    ```


    Para confirmar que la máquina virtual se está ejecutando, es necesario conectarse mediante Escritorio remoto. Para ello, debemos conocer la dirección IP pública.


    ```powershell

    $publicIp = Get-AzureRmPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources


    $publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}

    ```


    En este ejemplo, usamos `Get-AzureRmPublicIpAddress` y guardamos el resultado en la variable \$publicIp. En esta variable, seleccionamos las propiedades y utilizamos una expresión para recuperar la propiedad anidada Fqdn.


    ```Output

    Name             IpAddress           FQDN

    ----             ---------           ----

    tutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com

    ```


    En el equipo local, puede ejecutar el comando siguiente para conectarse a la máquina virtual a través de Escritorio remoto.


    ```powershell

    mstsc.exe /v <PUBLIC_IP_ADDRESS>

    ```


    Para más información sobre cómo realizar consultas sobre propiedades de objetos, consulte [Consulta de los recursos de Azure](./queries-azureps.md).
- durationInMinutes: 4
  title: Creación de una nueva máquina virtual en la subred existente
  content: >-
    La segunda máquina virtual usa la subred existente.


    ```powershell

    $vm2Params = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM2'
      ImageName = 'Win2016Datacenter'
      VirtualNetworkName = 'TutorialVM1'
      SubnetName = 'TutorialVM1'
      PublicIpAddressName = 'tutorialPublicIp2'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM2 = New-AzureRmVM @vm2Params


    $newVM2

    ```


    ```Output

    ResourceGroupName        : TutorialResources

    Id                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2

    VmId                     : 12345678-9abc-def0-1234-56789abcedf1

    Name                     : TutorialVM2

    Type                     : Microsoft.Compute/virtualMachines

    Location                 : eastus

    Tags                     : {}

    HardwareProfile          : {VmSize}

    NetworkProfile           : {NetworkInterfaces}

    OSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState        : Succeeded

    StorageProfile           : {ImageReference, OsDisk, DataDisks}

    FullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com

    ```


    Puede omitir algunos pasos para obtener la dirección IP pública de la nueva máquina virtual porque se devuelve en la propiedad FullyQualifiedDomainName del objeto \$newVM2. Utilice el comando siguiente para conectar mediante Escritorio remoto.


    ```powershell

    mstsc.exe /v $newVM2.FullyQualifiedDomainName

    ```
- durationInMinutes: 4
  title: Limpieza
  content: >-
    Ahora que ha finalizado el tutorial, es el momento de limpiar los recursos creados. Puede eliminar recursos individuales con el comando `Remove-AzureRmResource`, pero la forma más segura para eliminar todos los recursos de un grupo de recursos es eliminar el grupo con el comando `Remove-AzureRmResourceGroup`.


    ```powershell

    $job = Remove-AzureRmResourceGroup -Name TutorialResources -Force -AsJob


    $job

    ```


    ```Output

    Id     Name            PSJobTypeName   State         HasMoreData     Location             Command

    --     ----            -------------   -----         -----------     --------             -------

    1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzureRmResource...

    ```


    Este comando elimina los recursos creados durante el tutorial y se garantiza que cancela la asignación de los mismos en el orden correcto. El parámetro `-AsJob` evita que PowerShell se bloquee mientras se realiza la eliminación. Para esperar hasta que se complete la eliminación, use el comando siguiente:


    ```powershell

    Wait-Job -Id $job.Id

    ```


    Con la limpieza, ha finalizado el tutorial. Puede continuar con un resumen de todo lo aprendido y vínculos a recursos que le ayudarán con los pasos siguientes.
- durationInMinutes: 1
  title: Resumen
  content: "\nFelicidades. Ha aprendido a crear máquinas virtuales con recursos nuevos y existentes, ha utilizado expresiones y otros comandos de Azure PowerShell para capturar los datos que se almacenan en variables del shell, y ha examinando algunos de los recursos que se crean para las máquinas virtuales de Azure.\n\nDónde irá desde aquí dependerá de cómo tenga previsto utilizar Azure PowerShell. Hay una variedad de materiales que estudian en profundidad las características tratadas en este tutorial.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Documentación detallada de Azure PowerShell\n\nQuizás quiera dedicar un tiempo a explorar toda la [documentación de Azure PowerShell](overview.md).\n\nRevise los artículos siguientes para más información sobre los comandos utilizados en este tutorial.\n\n- [New-AzureRmResourceGroup](/powershell/module/azurerm.resources/new-azurermresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzureRmVM](/powershell/module/azurerm.compute/new-azurermvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Get-AzureRmPublicIpAddress](/powershell/module/azurerm.network/get-AzureRmPublicIpAddress)\n- [Remove-AzureRmResourceGroup](/powershell/module/azurerm.resources/Remove-AzureRmResourceGroup)\n- [Wait-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nTambién hay artículos que profundizan en las características que se mostraron en el tutorial.\n\n- [Expansión de PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Consultas](queries-azureps.md)\n- [Aplicación de formato](formatting-output.md)\n- [Uso de trabajos de PowerShell](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Scripts de ejemplo\n\nSi desea comenzar inmediatamente con tareas específicas, examine algunos scripts de ejemplo.\n\n- [Máquinas virtuales Linux](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Máquinas virtuales Windows](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Web Apps](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Bases de datos SQL Database](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Cosmos DB](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Comentarios\n\nSi desea proporcionar comentarios, sugerencias o plantear preguntas, hay varias maneras para ponerse en contacto.\n\n* `Send-Feedback` es un comando integrado de Azure PowerShell que permite enviar comentarios libremente al equipo.\n* Puede enviar una solicitud de característica o un informe de errores en el [repositorio de Azure PowerShell](https://github.com/Azure/azure-powershell/issues).\n* Formule preguntas y obtenga aclaraciones mediante el envío de un problema en el [repositorio de documentación de Azure PowerShell](https://github.com/Azure/azure-docs-powershell/issues).\n\nEsperamos que disfrute de Azure PowerShell."
