### YamlMime:Tutorial
title: "Creación de máquinas virtuales con Azure PowerShell"
metadata:
  title: "Creación de máquinas virtuales con Azure PowerShell"
  description: "Empiece a trabajar con Azure PowerShell mediante la creación de máquinas virtuales."
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 02/08/2018
  ms.author: sewhee
  author: sdwheeler
  manager: carmonm
  ms.devlang: azure-powershell
  ms.technology: azure
  ms.openlocfilehash: bb5024927da7888dca406a522fa39dfe225afb89
  ms.sourcegitcommit: 20af779cd523c758d40e23d60eb989a4ef982d5c
  ms.translationtype: HT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/15/2018
items:
- durationInMinutes: 1
  content: "En este tutorial, aprenderá todos los pasos necesarios para configurar una máquina virtual con Azure PowerShell. El tutorial también trata las consultas de salida, la reutilización de recursos de Azure y la limpieza de recursos.\n\nEste tutorial se puede llevar a cabo con la experiencia interactiva que se ofrece mediante Azure Cloud Shell, y también se puede [instalar Azure PowerShell](install-azurerm-ps.md) localmente.\n\nUse __ctrl-Mayús-v__ (__cmd-Mayús-v__ en Mac OS) para pegar el texto del tutorial en Azure Cloud Shell."
- durationInMinutes: 1
  title: Registro
  content: "Si usa una instalación local de Azure PowerShell, debe iniciar sesión antes de realizar otros pasos.\n\n```powershell\nLogin-AzureRmAccount\n```\n\nComplete el proceso de inicio de sesión siguiendo los pasos que se muestran en el terminal."
- durationInMinutes: 1
  title: Crear un grupo de recursos
  content: "En Azure, todos los recursos se asignan en un grupo de administración de recursos. Los grupos de recursos proporcionan agrupaciones lógicas de recursos para hacer más fácil trabajar con ellos como una colección.\nEn este tutorial, todos los recursos creados se sitúan en un grupo llamado `TutorialResources`.\n\n```powershell\nNew-AzureRmResourceGroup -Name TutorialResources -Location eastus\n```\n\n```Output\nResourceGroupName : TutorialResources\nLocation          : eastus\nProvisioningState : Succeeded\nTags              :\nResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources\n```"
- durationInMinutes: 1
  title: "Creación de las credenciales de administración para la máquina virtual"
  content: "Para poder crear una nueva máquina virtual, debe crear un objeto de credenciales que contenga el nombre de usuario y la contraseña de la cuenta de administrador de la máquina virtual Windows.\n\n```powershell\n$cred = Get-Credential -Message \"Enter a username and password for the virtual machine.\"\n```\n\nCuando se le solicite, escriba el nombre de usuario y la contraseña. El objeto de credenciales resultante se pasa como un parámetro en el paso siguiente.\n\n```Output\nWindows PowerShell credential request.\nEnter a username and password for the virtual machine.\nUser: tutorAdmin\nPassword for user tutorAdmin: *********\n```"
- durationInMinutes: 4
  title: "de una máquina virtual"
  content: "Las máquinas virtuales en Azure tienen un gran número de dependencias. Azure PowerShell crea estos recursos en función de los argumentos de la línea de comandos que especifique. Para mejorar la legibilidad, estamos usando la [expansión de PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting) para pasar parámetros a los cmdlets de Azure PowerShell.\n\nCree una nueva máquina virtual que ejecuta Windows.\n\n```powershell\n$vmParams = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM1'\n  Location = 'eastus'\n  ImageName = 'Win2016Datacenter'\n  PublicIpAddressName = 'tutorialPublicIp'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM1 = New-AzureRmVM @vmParams\n```\nAl crear la máquina virtual, verá los valores utilizados en los parámetros y los recursos de Azure que se van a crear.\nPowerShell mostrará una barra de progreso tal y como se muestra a continuación.\n\n```Output\n Creating Azure resources\n  39% \\\n  [ooooooooooooooooooooooooooooooooooo                                                                 ]\n\n  Creating TutorialVM1 virtual machine.\n```\n\nCuando la máquina virtual está lista, podemos ver los resultados en Azure Portal o en la variable \\$newVM1.\n\n```powershell\n$newVM1\n```\n\n```Output\nResourceGroupName : TutorialResources\nId                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1\nVmId              : 12345678-9abc-def0-1234-56789abcedf0\nName              : TutorialVM1\nType              : Microsoft.Compute/virtualMachines\nLocation          : eastus\nTags              : {}\nHardwareProfile   : {VmSize}\nNetworkProfile    : {NetworkInterfaces}\nOSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState : Succeeded\nStorageProfile    : {ImageReference, OsDisk, DataDisks}\n```\n\nLos valores de propiedad que se muestran dentro de llaves son objetos anidados. En el siguiente paso, mostraremos cómo ver los valores específicos de estos objetos anidados."
- durationInMinutes: 5
  title: "Obtención de información de la máquina virtual con consultas"
  content: "Vamos a obtener información más detallada acerca de la máquina virtual que acabamos de crear. En este ejemplo, se comprueba el nombre de la máquina virtual y la cuenta de administrador que hemos creado.\n\n```powershell\n$newVM1.OSProfile | Select-Object ComputerName,AdminUserName\n```\n\n```Output\nComputerName AdminUsername\n------------ -------------\nTutorialVM1  tutorialAdmin\n```\n\nPodemos usar otros comandos de Azure PowerShell para obtener información específica sobre la configuración de red.\n\n```powershell\n$newVM1 | Get-AzureRmNetworkInterface |\n  Select-Object -ExpandProperty IpConfigurations |\n    Select-Object Name,PrivateIpAddress\n```\n\nEn este ejemplo, usamos la canalización de PowerShell para enviar el objeto \\$newVM1 al cmdlet `Get-AzureRmNetworkInterface`. En el objeto de interfaz de red resultante, seleccionamos el objeto anidado IpConfigurations. En el objeto IpConfigurations, se han seleccionado las propiedades Name y PrivateIpAddress.\n\n```Output\nName        PrivateIpAddress\n----        ----------------\nTutorialVM1 192.168.1.4\n```\n\nPara confirmar que la máquina virtual se está ejecutando, es necesario conectarse mediante Escritorio remoto. Para ello, debemos conocer la dirección IP pública.\n\n```powershell\n$publicIp = Get-AzureRmPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources\n\n$publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}\n```\n\nEn este ejemplo, usamos `Get-AzureRmPublicIpAddress` y guardamos el resultado en la variable \\$publicIp. En esta variable, seleccionamos las propiedades y utilizamos una expresión para recuperar la propiedad anidada Fqdn.\n\n```Output\nName             IpAddress           FQDN\n----             ---------           ----\ntutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com\n```\n\nEn el equipo local, puede ejecutar el comando siguiente para conectarse a la máquina virtual a través de Escritorio remoto.\n\n```powershell\nmstsc.exe /v <PUBLIC_IP_ADDRESS>\n```\n\nPara más información sobre cómo realizar consultas sobre propiedades de objetos, consulte [Consulta de los recursos de Azure](./queries-azureps.md)."
- durationInMinutes: 4
  title: "Creación de una nueva máquina virtual en la subred existente"
  content: "La segunda máquina virtual usa la subred existente.\n\n```powershell\n$vm2Params = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM2'\n  ImageName = 'Win2016Datacenter'\n  VirtualNetworkName = 'TutorialVM1'\n  SubnetName = 'TutorialVM1'\n  PublicIpAddressName = 'tutorialPublicIp2'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM2 = New-AzureRmVM @vm2Params\n\n$newVM2\n```\n\n```Output\nResourceGroupName        : TutorialResources\nId                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2\nVmId                     : 12345678-9abc-def0-1234-56789abcedf1\nName                     : TutorialVM2\nType                     : Microsoft.Compute/virtualMachines\nLocation                 : eastus\nTags                     : {}\nHardwareProfile          : {VmSize}\nNetworkProfile           : {NetworkInterfaces}\nOSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState        : Succeeded\nStorageProfile           : {ImageReference, OsDisk, DataDisks}\nFullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com\n```\n\nPuede omitir algunos pasos para obtener la dirección IP pública de la nueva máquina virtual porque se devuelve en la propiedad FullyQualifiedDomainName del objeto \\$newVM2. Utilice el comando siguiente para conectar mediante Escritorio remoto.\n\n```powershell\nmstsc.exe /v $newVM2.FullyQualifiedDomainName\n```"
- durationInMinutes: 4
  title: Limpieza
  content: "Ahora que ha finalizado el tutorial, es el momento de limpiar los recursos creados. Puede eliminar recursos individuales con el comando `Remove-AzureRmResource`, pero la forma más segura para eliminar todos los recursos de un grupo de recursos es eliminar el grupo con el comando `Remove-AzureRmResourceGroup`.\n\n```powershell\n$job = Remove-AzureRmResourceGroup -Name TutorialResources -Force -AsJob\n\n$job\n```\n\n```Output\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\n--     ----            -------------   -----         -----------     --------             -------\n1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzureRmResource...\n```\n\nEste comando elimina los recursos creados durante el tutorial y se garantiza que cancela la asignación de los mismos en el orden correcto. El parámetro `-AsJob` evita que PowerShell se bloquee mientras se realiza la eliminación. Para esperar hasta que se complete la eliminación, use el comando siguiente:\n\n```powershell\nWait-Job -Id $job.Id\n```\n\nCon la limpieza, ha finalizado el tutorial. Puede continuar con un resumen de todo lo aprendido y vínculos a recursos que le ayudarán con los pasos siguientes."
- durationInMinutes: 1
  title: Resumen
  content: "\nFelicidades. Ha aprendido a crear máquinas virtuales con recursos nuevos y existentes, ha utilizado expresiones y otros comandos de Azure PowerShell para capturar los datos que se almacenan en variables del shell, y ha examinando algunos de los recursos que se crean para las máquinas virtuales de Azure.\n\nDónde irá desde aquí dependerá de cómo tenga previsto utilizar Azure PowerShell. Hay una variedad de materiales que estudian en profundidad las características tratadas en este tutorial.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Documentación detallada de Azure PowerShell\n\nQuizás quiera dedicar un tiempo a explorar toda la [documentación de Azure PowerShell](overview.md).\n\nRevise los artículos siguientes para más información sobre los comandos utilizados en este tutorial.\n\n- [New-AzureRmResourceGroup](/powershell/module/azurerm.resources/new-azurermresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzureRmVM](/powershell/module/azurerm.compute/new-azurermvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Get-AzureRmPublicIpAddress](/powershell/module/azurerm.network/get-AzureRmPublicIpAddress)\n- [Remove-AzureRmResourceGroup](/powershell/module/azurerm.resources/Remove-AzureRmResourceGroup)\n- [Wait-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nTambién hay artículos que profundizan en las características que se mostraron en el tutorial.\n\n- [Expansión de PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Consultas](queries-azureps.md)\n- [Aplicación de formato](formatting-output.md)\n- [Uso de trabajos de PowerShell](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Scripts de ejemplo\n\nSi desea comenzar inmediatamente con tareas específicas, examine algunos scripts de ejemplo.\n\n- [Máquinas virtuales Linux](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Máquinas virtuales Windows](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Web Apps](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Bases de datos SQL Database](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Cosmos DB](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Comentarios\n\nSi desea proporcionar comentarios, sugerencias o plantear preguntas, hay varias maneras para ponerse en contacto.\n\n* `Send-Feedback` es un comando integrado de Azure PowerShell que permite enviar comentarios libremente al equipo.\n* Puede enviar una solicitud de característica o un informe de errores en el [repositorio de Azure PowerShell](https://github.com/Azure/azure-powershell/issues).\n* Formule preguntas y obtenga aclaraciones mediante el envío de un problema en el [repositorio de documentación de Azure PowerShell](https://github.com/Azure/azure-docs-powershell/issues).\n\nEsperamos que disfrute de Azure PowerShell."
